//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
namespace WITS.to.XAF.WITSRej
{

    public partial class LotNumber : XPCustomObject
    {
        Guid fOid;
        [Key(true)]
        public Guid Oid
        {
            get { return fOid; }
            set { SetPropertyValue<Guid>("Oid", ref fOid, value); }
        }
        bool fIsSystemObject;
        public bool IsSystemObject
        {
            get { return fIsSystemObject; }
            set { SetPropertyValue<bool>("IsSystemObject", ref fIsSystemObject, value); }
        }
        Guid fOrganization;
        [Indexed(Name = @"iOrganization_LotNumber")]
        public Guid Organization
        {
            get { return fOrganization; }
            set { SetPropertyValue<Guid>("Organization", ref fOrganization, value); }
        }
        Guid fLocation;
        [Indexed(Name = @"iLocation_LotNumber")]
        public Guid Location
        {
            get { return fLocation; }
            set { SetPropertyValue<Guid>("Location", ref fLocation, value); }
        }
        string fOrganizationName;
        public string OrganizationName
        {
            get { return fOrganizationName; }
            set { SetPropertyValue<string>("OrganizationName", ref fOrganizationName, value); }
        }
        string fLocationName;
        public string LocationName
        {
            get { return fLocationName; }
            set { SetPropertyValue<string>("LocationName", ref fLocationName, value); }
        }
        bool fIsActive;
        public bool IsActive
        {
            get { return fIsActive; }
            set { SetPropertyValue<bool>("IsActive", ref fIsActive, value); }
        }
        string fCreatedBy;
        public string CreatedBy
        {
            get { return fCreatedBy; }
            set { SetPropertyValue<string>("CreatedBy", ref fCreatedBy, value); }
        }
        DateTime fCreatedOn;
        public DateTime CreatedOn
        {
            get { return fCreatedOn; }
            set { SetPropertyValue<DateTime>("CreatedOn", ref fCreatedOn, value); }
        }
        string fModifiedBy;
        public string ModifiedBy
        {
            get { return fModifiedBy; }
            set { SetPropertyValue<string>("ModifiedBy", ref fModifiedBy, value); }
        }
        DateTime fModifiedOn;
        public DateTime ModifiedOn
        {
            get { return fModifiedOn; }
            set { SetPropertyValue<DateTime>("ModifiedOn", ref fModifiedOn, value); }
        }
        string fTag;
        [Size(SizeAttribute.Unlimited)]
        public string Tag
        {
            get { return fTag; }
            set { SetPropertyValue<string>("Tag", ref fTag, value); }
        }
        int fAccessStatus;
        public int AccessStatus
        {
            get { return fAccessStatus; }
            set { SetPropertyValue<int>("AccessStatus", ref fAccessStatus, value); }
        }
        SplitSetup fSplitSetup;
        [Association(@"LotNumberReferencesSplitSetup")]
        public SplitSetup SplitSetup
        {
            get { return fSplitSetup; }
            set { SetPropertyValue<SplitSetup>("SplitSetup", ref fSplitSetup, value); }
        }
        Customer fCustomer;
        [Association(@"LotNumberReferencesCustomer")]
        public Customer Customer
        {
            get { return fCustomer; }
            set { SetPropertyValue<Customer>("Customer", ref fCustomer, value); }
        }
        Commodity fCommodity;
        [Association(@"LotNumberReferencesCommodity")]
        public Commodity Commodity
        {
            get { return fCommodity; }
            set { SetPropertyValue<Commodity>("Commodity", ref fCommodity, value); }
        }
        bool fLotActive;
        public bool LotActive
        {
            get { return fLotActive; }
            set { SetPropertyValue<bool>("LotActive", ref fLotActive, value); }
        }
        string fLotLocationId;
        [Size(20)]
        public string LotLocationId
        {
            get { return fLotLocationId; }
            set { SetPropertyValue<string>("LotLocationId", ref fLotLocationId, value); }
        }
        string fLotShare;
        [Size(2)]
        public string LotShare
        {
            get { return fLotShare; }
            set { SetPropertyValue<string>("LotShare", ref fLotShare, value); }
        }
        DateTime fLotTrDate;
        public DateTime LotTrDate
        {
            get { return fLotTrDate; }
            set { SetPropertyValue<DateTime>("LotTrDate", ref fLotTrDate, value); }
        }
        bool fLotComplete;
        public bool LotComplete
        {
            get { return fLotComplete; }
            set { SetPropertyValue<bool>("LotComplete", ref fLotComplete, value); }
        }
        DateTime fLotCloseDate;
        public DateTime LotCloseDate
        {
            get { return fLotCloseDate; }
            set { SetPropertyValue<DateTime>("LotCloseDate", ref fLotCloseDate, value); }
        }
        bool fLotHouseOwned;
        public bool LotHouseOwned
        {
            get { return fLotHouseOwned; }
            set { SetPropertyValue<bool>("LotHouseOwned", ref fLotHouseOwned, value); }
        }
        bool fLotDpr;
        public bool LotDpr
        {
            get { return fLotDpr; }
            set { SetPropertyValue<bool>("LotDpr", ref fLotDpr, value); }
        }
        bool fLotShrink;
        public bool LotShrink
        {
            get { return fLotShrink; }
            set { SetPropertyValue<bool>("LotShrink", ref fLotShrink, value); }
        }
        bool fLotDryCharge;
        public bool LotDryCharge
        {
            get { return fLotDryCharge; }
            set { SetPropertyValue<bool>("LotDryCharge", ref fLotDryCharge, value); }
        }
        bool fLotStoreCharge;
        public bool LotStoreCharge
        {
            get { return fLotStoreCharge; }
            set { SetPropertyValue<bool>("LotStoreCharge", ref fLotStoreCharge, value); }
        }
        bool fLotFixedDockage;
        public bool LotFixedDockage
        {
            get { return fLotFixedDockage; }
            set { SetPropertyValue<bool>("LotFixedDockage", ref fLotFixedDockage, value); }
        }
        bool fLotImmedSplit;
        public bool LotImmedSplit
        {
            get { return fLotImmedSplit; }
            set { SetPropertyValue<bool>("LotImmedSplit", ref fLotImmedSplit, value); }
        }
        bool fLotIdPreserve;
        public bool LotIdPreserve
        {
            get { return fLotIdPreserve; }
            set { SetPropertyValue<bool>("LotIdPreserve", ref fLotIdPreserve, value); }
        }
        string fLotPcn;
        [Size(50)]
        public string LotPcn
        {
            get { return fLotPcn; }
            set { SetPropertyValue<string>("LotPcn", ref fLotPcn, value); }
        }
        string fLotSplitId;
        [Size(30)]
        public string LotSplitId
        {
            get { return fLotSplitId; }
            set { SetPropertyValue<string>("LotSplitId", ref fLotSplitId, value); }
        }
        string fLotSplitNumber;
        [Size(4)]
        public string LotSplitNumber
        {
            get { return fLotSplitNumber; }
            set { SetPropertyValue<string>("LotSplitNumber", ref fLotSplitNumber, value); }
        }
        decimal fLotHead;
        public decimal LotHead
        {
            get { return fLotHead; }
            set { SetPropertyValue<decimal>("LotHead", ref fLotHead, value); }
        }
        decimal fLotTotal;
        public decimal LotTotal
        {
            get { return fLotTotal; }
            set { SetPropertyValue<decimal>("LotTotal", ref fLotTotal, value); }
        }
        string fLotCountry;
        [Size(25)]
        public string LotCountry
        {
            get { return fLotCountry; }
            set { SetPropertyValue<string>("LotCountry", ref fLotCountry, value); }
        }
        decimal fLotDocActual;
        public decimal LotDocActual
        {
            get { return fLotDocActual; }
            set { SetPropertyValue<decimal>("LotDocActual", ref fLotDocActual, value); }
        }
        string fLotDocActControl;
        [Size(20)]
        public string LotDocActControl
        {
            get { return fLotDocActControl; }
            set { SetPropertyValue<string>("LotDocActControl", ref fLotDocActControl, value); }
        }
        string fLotCompanyLocation;
        [Size(2)]
        public string LotCompanyLocation
        {
            get { return fLotCompanyLocation; }
            set { SetPropertyValue<string>("LotCompanyLocation", ref fLotCompanyLocation, value); }
        }
        string fLotStoreLocation;
        [Size(20)]
        public string LotStoreLocation
        {
            get { return fLotStoreLocation; }
            set { SetPropertyValue<string>("LotStoreLocation", ref fLotStoreLocation, value); }
        }
        string fLotOldId;
        [Size(3)]
        public string LotOldId
        {
            get { return fLotOldId; }
            set { SetPropertyValue<string>("LotOldId", ref fLotOldId, value); }
        }
        string fLotOldCode;
        [Size(5)]
        public string LotOldCode
        {
            get { return fLotOldCode; }
            set { SetPropertyValue<string>("LotOldCode", ref fLotOldCode, value); }
        }
        [Association(@"CertificateReferencesLotNumber")]
        public XPCollection<Certificate> Certificates { get { return GetCollection<Certificate>("Certificates"); } }
        [Association(@"GrowerYTDReferencesLotNumber")]
        public XPCollection<GrowerYTD> GrowerYTDs { get { return GetCollection<GrowerYTD>("GrowerYTDs"); } }
    }

}
