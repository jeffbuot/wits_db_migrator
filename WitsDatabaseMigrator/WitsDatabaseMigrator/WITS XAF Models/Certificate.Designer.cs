//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
namespace WITS.to.XAF.WITSRej
{

    public partial class Certificate : XPLiteObject
    {
        Guid fOid;
        [Key(true)]
        public Guid Oid
        {
            get { return fOid; }
            set { SetPropertyValue<Guid>("Oid", ref fOid, value); }
        }
        Guid fQuality;
        [Indexed(Name = @"iQuality_Certificate")]
        public Guid Quality
        {
            get { return fQuality; }
            set { SetPropertyValue<Guid>("Quality", ref fQuality, value); }
        }
        Customer fCustomer;
        [Indexed(Name = @"iCustomer_Certificate")]
        [Association(@"CertificateReferencesCustomer1")]
        public Customer Customer
        {
            get { return fCustomer; }
            set { SetPropertyValue<Customer>("Customer", ref fCustomer, value); }
        }
        Customer fCarrier;
        [Indexed(Name = @"iCarrier_Certificate")]
        [Association(@"CertificateReferencesCustomer")]
        public Customer Carrier
        {
            get { return fCarrier; }
            set { SetPropertyValue<Customer>("Carrier", ref fCarrier, value); }
        }
        Customer fVendor;
        [Indexed(Name = @"iVendor_Certificate")]
        [Association(@"CertificateReferencesCustomer2")]
        public Customer Vendor
        {
            get { return fVendor; }
            set { SetPropertyValue<Customer>("Vendor", ref fVendor, value); }
        }
        Guid fDriver;
        [Indexed(Name = @"iDriver_Certificate")]
        public Guid Driver
        {
            get { return fDriver; }
            set { SetPropertyValue<Guid>("Driver", ref fDriver, value); }
        }
        string fDriverName;
        [Size(25)]
        public string DriverName
        {
            get { return fDriverName; }
            set { SetPropertyValue<string>("DriverName", ref fDriverName, value); }
        }
        Commodity fCommodity;
        [Indexed(Name = @"iCommodity_Certificate")]
        [Association(@"CertificateReferencesCommodity")]
        public Commodity Commodity
        {
            get { return fCommodity; }
            set { SetPropertyValue<Commodity>("Commodity", ref fCommodity, value); }
        }
        LotNumber fLotNumber;
        [Indexed(Name = @"iLotNumber_Certificate")]
        [Association(@"CertificateReferencesLotNumber")]
        public LotNumber LotNumber
        {
            get { return fLotNumber; }
            set { SetPropertyValue<LotNumber>("LotNumber", ref fLotNumber, value); }
        }
        Guid fStoredTare;
        [Indexed(Name = @"iStoredTare_Certificate")]
        public Guid StoredTare
        {
            get { return fStoredTare; }
            set { SetPropertyValue<Guid>("StoredTare", ref fStoredTare, value); }
        }
        string fCertificateNumber;
        public string CertificateNumber
        {
            get { return fCertificateNumber; }
            set { SetPropertyValue<string>("CertificateNumber", ref fCertificateNumber, value); }
        }
        long fPCN;
        public long PCN
        {
            get { return fPCN; }
            set { SetPropertyValue<long>("PCN", ref fPCN, value); }
        }
        DateTime fInboundDate;
        public DateTime InboundDate
        {
            get { return fInboundDate; }
            set { SetPropertyValue<DateTime>("InboundDate", ref fInboundDate, value); }
        }
        int fInboundWeight;
        public int InboundWeight
        {
            get { return fInboundWeight; }
            set { SetPropertyValue<int>("InboundWeight", ref fInboundWeight, value); }
        }
        string fInboundUnit;
        [Size(10)]
        public string InboundUnit
        {
            get { return fInboundUnit; }
            set { SetPropertyValue<string>("InboundUnit", ref fInboundUnit, value); }
        }
        bool fIsManualInboundWeight;
        public bool IsManualInboundWeight
        {
            get { return fIsManualInboundWeight; }
            set { SetPropertyValue<bool>("IsManualInboundWeight", ref fIsManualInboundWeight, value); }
        }
        string fTransactionCode;
        [Size(1)]
        public string TransactionCode
        {
            get { return fTransactionCode; }
            set { SetPropertyValue<string>("TransactionCode", ref fTransactionCode, value); }
        }
        DateTime fOutboundDate;
        public DateTime OutboundDate
        {
            get { return fOutboundDate; }
            set { SetPropertyValue<DateTime>("OutboundDate", ref fOutboundDate, value); }
        }
        int fOutboundWeight;
        public int OutboundWeight
        {
            get { return fOutboundWeight; }
            set { SetPropertyValue<int>("OutboundWeight", ref fOutboundWeight, value); }
        }
        string fOutboundUnit;
        [Size(10)]
        public string OutboundUnit
        {
            get { return fOutboundUnit; }
            set { SetPropertyValue<string>("OutboundUnit", ref fOutboundUnit, value); }
        }
        bool fIsOutboundManualWeight;
        public bool IsOutboundManualWeight
        {
            get { return fIsOutboundManualWeight; }
            set { SetPropertyValue<bool>("IsOutboundManualWeight", ref fIsOutboundManualWeight, value); }
        }
        int fWeightNet;
        public int WeightNet
        {
            get { return fWeightNet; }
            set { SetPropertyValue<int>("WeightNet", ref fWeightNet, value); }
        }
        string fWeightNetUnit;
        [Size(10)]
        public string WeightNetUnit
        {
            get { return fWeightNetUnit; }
            set { SetPropertyValue<string>("WeightNetUnit", ref fWeightNetUnit, value); }
        }
        int fCommodityCount;
        public int CommodityCount
        {
            get { return fCommodityCount; }
            set { SetPropertyValue<int>("CommodityCount", ref fCommodityCount, value); }
        }
        string fCommodityUnits;
        [Size(15)]
        public string CommodityUnits
        {
            get { return fCommodityUnits; }
            set { SetPropertyValue<string>("CommodityUnits", ref fCommodityUnits, value); }
        }
        int fCommodityCountBy;
        public int CommodityCountBy
        {
            get { return fCommodityCountBy; }
            set { SetPropertyValue<int>("CommodityCountBy", ref fCommodityCountBy, value); }
        }
        string fAxleWeight;
        [Size(10)]
        public string AxleWeight
        {
            get { return fAxleWeight; }
            set { SetPropertyValue<string>("AxleWeight", ref fAxleWeight, value); }
        }
        Guid fTruck;
        [Indexed(Name = @"iTruck_Certificate")]
        public Guid Truck
        {
            get { return fTruck; }
            set { SetPropertyValue<Guid>("Truck", ref fTruck, value); }
        }
        string fTruckLicense;
        public string TruckLicense
        {
            get { return fTruckLicense; }
            set { SetPropertyValue<string>("TruckLicense", ref fTruckLicense, value); }
        }
        string fTruckNumber;
        public string TruckNumber
        {
            get { return fTruckNumber; }
            set { SetPropertyValue<string>("TruckNumber", ref fTruckNumber, value); }
        }
        string fTruckLicenseState;
        public string TruckLicenseState
        {
            get { return fTruckLicenseState; }
            set { SetPropertyValue<string>("TruckLicenseState", ref fTruckLicenseState, value); }
        }
        Guid fTrailer1;
        [Indexed(Name = @"iTrailer1_Certificate")]
        public Guid Trailer1
        {
            get { return fTrailer1; }
            set { SetPropertyValue<Guid>("Trailer1", ref fTrailer1, value); }
        }
        string fTrailer1Number;
        public string Trailer1Number
        {
            get { return fTrailer1Number; }
            set { SetPropertyValue<string>("Trailer1Number", ref fTrailer1Number, value); }
        }
        string fTrailer1State;
        public string Trailer1State
        {
            get { return fTrailer1State; }
            set { SetPropertyValue<string>("Trailer1State", ref fTrailer1State, value); }
        }
        Guid fTrailer2;
        [Indexed(Name = @"iTrailer2_Certificate")]
        public Guid Trailer2
        {
            get { return fTrailer2; }
            set { SetPropertyValue<Guid>("Trailer2", ref fTrailer2, value); }
        }
        string fTrailer2Number;
        public string Trailer2Number
        {
            get { return fTrailer2Number; }
            set { SetPropertyValue<string>("Trailer2Number", ref fTrailer2Number, value); }
        }
        string fTrailer2State;
        public string Trailer2State
        {
            get { return fTrailer2State; }
            set { SetPropertyValue<string>("Trailer2State", ref fTrailer2State, value); }
        }
        Guid fTrailer3;
        [Indexed(Name = @"iTrailer3_Certificate")]
        public Guid Trailer3
        {
            get { return fTrailer3; }
            set { SetPropertyValue<Guid>("Trailer3", ref fTrailer3, value); }
        }
        string fTrailer3Number;
        public string Trailer3Number
        {
            get { return fTrailer3Number; }
            set { SetPropertyValue<string>("Trailer3Number", ref fTrailer3Number, value); }
        }
        string fTrailer3State;
        public string Trailer3State
        {
            get { return fTrailer3State; }
            set { SetPropertyValue<string>("Trailer3State", ref fTrailer3State, value); }
        }
        string fWeightMasterIn;
        [Size(25)]
        public string WeightMasterIn
        {
            get { return fWeightMasterIn; }
            set { SetPropertyValue<string>("WeightMasterIn", ref fWeightMasterIn, value); }
        }
        string fWeightMasterOut;
        [Size(25)]
        public string WeightMasterOut
        {
            get { return fWeightMasterOut; }
            set { SetPropertyValue<string>("WeightMasterOut", ref fWeightMasterOut, value); }
        }
        string fComments;
        [Size(SizeAttribute.Unlimited)]
        public string Comments
        {
            get { return fComments; }
            set { SetPropertyValue<string>("Comments", ref fComments, value); }
        }
        bool fIsStoredTare;
        public bool IsStoredTare
        {
            get { return fIsStoredTare; }
            set { SetPropertyValue<bool>("IsStoredTare", ref fIsStoredTare, value); }
        }
        bool fIsPDTare;
        public bool IsPDTare
        {
            get { return fIsPDTare; }
            set { SetPropertyValue<bool>("IsPDTare", ref fIsPDTare, value); }
        }
        int fScaleIn;
        public int ScaleIn
        {
            get { return fScaleIn; }
            set { SetPropertyValue<int>("ScaleIn", ref fScaleIn, value); }
        }
        int fScaleOut;
        public int ScaleOut
        {
            get { return fScaleOut; }
            set { SetPropertyValue<int>("ScaleOut", ref fScaleOut, value); }
        }
        decimal fFee;
        public decimal Fee
        {
            get { return fFee; }
            set { SetPropertyValue<decimal>("Fee", ref fFee, value); }
        }
        short fPayment;
        public short Payment
        {
            get { return fPayment; }
            set { SetPropertyValue<short>("Payment", ref fPayment, value); }
        }
        bool fIsReprint;
        public bool IsReprint
        {
            get { return fIsReprint; }
            set { SetPropertyValue<bool>("IsReprint", ref fIsReprint, value); }
        }
        bool fIsInvoice;
        public bool IsInvoice
        {
            get { return fIsInvoice; }
            set { SetPropertyValue<bool>("IsInvoice", ref fIsInvoice, value); }
        }
        int fCreditCard;
        public int CreditCard
        {
            get { return fCreditCard; }
            set { SetPropertyValue<int>("CreditCard", ref fCreditCard, value); }
        }
        string fLotNumberPCN;
        [Size(15)]
        public string LotNumberPCN
        {
            get { return fLotNumberPCN; }
            set { SetPropertyValue<string>("LotNumberPCN", ref fLotNumberPCN, value); }
        }
        string fRelease;
        [Size(15)]
        public string Release
        {
            get { return fRelease; }
            set { SetPropertyValue<string>("Release", ref fRelease, value); }
        }
        string fFreightBill;
        [Size(15)]
        public string FreightBill
        {
            get { return fFreightBill; }
            set { SetPropertyValue<string>("FreightBill", ref fFreightBill, value); }
        }
        string fBOL;
        [Size(15)]
        public string BOL
        {
            get { return fBOL; }
            set { SetPropertyValue<string>("BOL", ref fBOL, value); }
        }
        byte[] fSignature;
        [Size(SizeAttribute.Unlimited)]
        public byte[] Signature
        {
            get { return fSignature; }
            set { SetPropertyValue<byte[]>("Signature", ref fSignature, value); }
        }
        bool fIsText;
        public bool IsText
        {
            get { return fIsText; }
            set { SetPropertyValue<bool>("IsText", ref fIsText, value); }
        }
        bool fIsAOW;
        public bool IsAOW
        {
            get { return fIsAOW; }
            set { SetPropertyValue<bool>("IsAOW", ref fIsAOW, value); }
        }
        int fCertificateScaleNumber;
        public int CertificateScaleNumber
        {
            get { return fCertificateScaleNumber; }
            set { SetPropertyValue<int>("CertificateScaleNumber", ref fCertificateScaleNumber, value); }
        }
        string fCertificateOldKey;
        public string CertificateOldKey
        {
            get { return fCertificateOldKey; }
            set { SetPropertyValue<string>("CertificateOldKey", ref fCertificateOldKey, value); }
        }
        Guid fPrimaryAddress;
        [Indexed(Name = @"iPrimaryAddress_Certificate")]
        public Guid PrimaryAddress
        {
            get { return fPrimaryAddress; }
            set { SetPropertyValue<Guid>("PrimaryAddress", ref fPrimaryAddress, value); }
        }
    }

}
